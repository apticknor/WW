/* ---------------------------------------------------------------------
Global JavaScript & jQuery
------------------------------------------------------------------------ */
var WW = WW || {};

(function($, window, APP, undefined) {

    // DOM Ready
    $(function() {

        // Common jQuery elements
        APP.$html   = $('html');
        APP.$body   = $('body');
        APP.$window = $(window);

        APP.HasJS.init();
        APP.ShowPanel.init();
        APP.ShowProductImage.init();
        APP.Toggle.init();
        APP.RecoverHash.init();
    });

    /* ---------------------------------------------------------------------
    HasJS

    Adds JS class to HTML element if JS is present
    Removes no-js class from html element if JS present
    ------------------------------------------------------------------------ */
    APP.HasJS = {
        init: function() {
            APP.$html
                .addClass('js')
                .removeClass('no-js');
        }
    };

    /* ---------------------------------------------------------------------
    ShowPanel

    Toggle the class on the matching target for the mobile nav panel
    ------------------------------------------------------------------------ */
    APP.ShowPanel = {
        $slidePanelTrigger: null,
        $slidePanelTarget: null,
        toggleClass: 'mobileNav-isVisible',
        bodyClass: 'isNotScrollable',

        init: function() {

            var $slidePanelTrigger = $('#js-slidePanelTrigger');
            var $slidePanelTarget = $('#js-slidePanelTarget');

            if (!$slidePanelTrigger.length || !$slidePanelTarget.length) {
                return false;
            }

            this.$slidePanelTrigger = $slidePanelTrigger;
            this.$slidePanelTarget = $slidePanelTarget;

            this.createEvents();
        },

        createEvents: function() {
            var self = this;

            this.$slidePanelTrigger.on('click', function(e) {
                self.togglePanel();
                e.preventDefault();
            });

            $(document).on('keyup', function(e) {
                if (e.keyCode === 27) {
                    self.hidePanel();
                }
            });
        },

        togglePanel: function() {
            if (this.$slidePanelTarget.hasClass(this.toggleClass)) {
                this.hidePanel();
            } else {
                this.revealPanel();
            }
        },

        revealPanel: function() {
            this.$slidePanelTarget.addClass(this.toggleClass);
        },

        hidePanel: function() {
            this.$slidePanelTarget.removeClass(this.toggleClass);
        }

    };

    /* ---------------------------------------------------------------------
    ShowProductImage

    Show the large product image the user has requested.
    ------------------------------------------------------------------------ */
    APP.ShowProductImage = {
        $productThumbnails: null,
        $largeImageViewport: null,
        hiddenClass: 'isVisuallyHidden',

        init: function() {
            var $productThumbnails = $('#js-allProductImages');
            var $largeImageViewport = $('#js-largeImageViewport');

            if (!$productThumbnails.length || !$largeImageViewport.length) {
                return false;
            }

            this.$productThumbnails = $productThumbnails;
            this.$largeImageViewport = $largeImageViewport;

            this.createEvents();
        },

        createEvents: function() {
            var self = this;

            this.$productThumbnails.on('click', 'img', function(e) {
                var index = $(this).parent().index();
                self.swapProductImage(index);
                e.preventDefault();
            });
        },

        swapProductImage: function(index) {
            this.$largeImageViewport.find('img').addClass(this.hiddenClass);
            this.$largeImageViewport.find('img').eq(index).removeClass(this.hiddenClass);
        }

    };

    /* ---------------------------------------------------------------------
    Toggle

    When an element with data-toggle-target is clicked, show or hide
    the specified target ID
    ------------------------------------------------------------------------ */
    APP.Toggle = {
        $toggleTriggers: null,
        hiddenClass: 'isHidden',

        init: function() {
            var $toggleTriggers = $('[data-toggle-target-show]');

            if (!$toggleTriggers.length) {
                return false;
            }

            this.$toggleTriggers = $toggleTriggers;

            this.createEvents();
        },

        createEvents: function() {
            var self = this;

            this.$toggleTriggers.on('click', function(e) {
                var showTargetId = $(this).attr('data-toggle-target-show');
                var hideTargetId = $(this).attr('data-toggle-target-hide');
                self.swapTargets(showTargetId, hideTargetId);
                e.preventDefault();
            });
        },

        swapTargets: function(showTargetId, hideTargetId) {
            $(document.getElementById(hideTargetId)).hide();
            $(document.getElementById(showTargetId)).show();
        }
    };

    /* ---------------------------------------------------------------------
    RecoverHash

    When the user interacts with the forgot password form it should show
    by default when the page loads instead of the regular signin form
    ------------------------------------------------------------------------ */
    APP.RecoverHash = {
        init: function() {
            if (window.location.hash == '#recover') {
                APP.Toggle.swapTargets('js-formResetPassword','js-formLogin');
            }
        }
    };

}(jQuery, window, WW));